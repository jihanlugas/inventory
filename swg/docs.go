// Package swg GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package swg

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "Ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/item": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Page Item",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/response.Pagination"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/item/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Create Item",
                "parameters": [
                    {
                        "description": "json req body",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.createItemReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/model.ItemRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sign-in": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in a user",
                "parameters": [
                    {
                        "description": "json req body",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.signinReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sign-out": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign out a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sign-up": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign up a user",
                "parameters": [
                    {
                        "description": "json req body",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.signupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "To do get current active user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.createItemReq": {
            "type": "object",
            "required": [
                "isActive",
                "itemDescription",
                "itemName",
                "price",
                "propertyId"
            ],
            "properties": {
                "isActive": {
                    "type": "boolean"
                },
                "itemDescription": {
                    "type": "string",
                    "maxLength": 200
                },
                "itemName": {
                    "type": "string",
                    "maxLength": 200
                },
                "price": {
                    "type": "integer"
                },
                "propertyId": {
                    "type": "integer"
                }
            }
        },
        "controller.signinReq": {
            "type": "object",
            "required": [
                "passwd",
                "username"
            ],
            "properties": {
                "passwd": {
                    "type": "string",
                    "maxLength": 200
                },
                "username": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "controller.signupReq": {
            "type": "object",
            "required": [
                "confirmPasswd",
                "email",
                "fullname",
                "noHp",
                "passwd",
                "propertyName",
                "username"
            ],
            "properties": {
                "confirmPasswd": {
                    "type": "string",
                    "maxLength": 200
                },
                "email": {
                    "type": "string",
                    "maxLength": 200
                },
                "fullname": {
                    "type": "string",
                    "maxLength": 80
                },
                "noHp": {
                    "type": "string",
                    "maxLength": 20
                },
                "passwd": {
                    "type": "string",
                    "maxLength": 200
                },
                "propertyName": {
                    "type": "string",
                    "maxLength": 200
                },
                "username": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "model.ItemRes": {
            "type": "object",
            "required": [
                "createBy",
                "createDt",
                "isActive",
                "itemDescription",
                "itemId",
                "itemName",
                "price",
                "propertyId",
                "updateBy",
                "updateDt"
            ],
            "properties": {
                "createBy": {
                    "type": "integer"
                },
                "createDt": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "itemDescription": {
                    "type": "string",
                    "maxLength": 200
                },
                "itemId": {
                    "type": "integer"
                },
                "itemName": {
                    "type": "string",
                    "maxLength": 200
                },
                "price": {
                    "type": "integer"
                },
                "propertyId": {
                    "type": "integer"
                },
                "updateBy": {
                    "type": "integer"
                },
                "updateDt": {
                    "type": "string"
                }
            }
        },
        "response.Pagination": {
            "type": "object",
            "properties": {
                "dataPerPage": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "totalData": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server Petstore server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
