definitions:
  controller.itemRes:
    properties:
      createBy:
        type: integer
      createDt:
        type: string
      isActive:
        type: boolean
      itemDescription:
        type: string
      itemId:
        type: integer
      itemName:
        type: string
      photoUrl:
        type: string
      propertyId:
        type: integer
      updateBy:
        type: integer
      updateDt:
        type: string
    type: object
  controller.itemvariantRes:
    properties:
      createBy:
        type: integer
      createDt:
        type: string
      isActive:
        type: boolean
      itemId:
        type: integer
      itemvariantDescription:
        type: string
      itemvariantId:
        type: integer
      itemvariantName:
        type: string
      photoUrl:
        type: string
      price:
        type: integer
      updateBy:
        type: integer
      updateDt:
        type: string
    type: object
  controller.pageItemReq:
    properties:
      itemDescription:
        type: string
      itemName:
        type: string
      limit:
        type: integer
      page:
        type: integer
    type: object
  controller.pageItemvariantReq:
    properties:
      itemId:
        type: integer
      itemvariantDescription:
        type: string
      itemvariantName:
        type: string
      limit:
        type: integer
      page:
        type: integer
    required:
    - itemId
    type: object
  controller.signinReq:
    properties:
      passwd:
        maxLength: 200
        type: string
      username:
        maxLength: 20
        type: string
    required:
    - passwd
    - username
    type: object
  controller.signupReq:
    properties:
      confirmPasswd:
        maxLength: 200
        type: string
      email:
        maxLength: 200
        type: string
      fullname:
        maxLength: 80
        type: string
      noHp:
        maxLength: 20
        type: string
      passwd:
        maxLength: 200
        type: string
      propertyName:
        maxLength: 200
        type: string
      username:
        maxLength: 20
        type: string
    required:
    - confirmPasswd
    - email
    - fullname
    - noHp
    - passwd
    - propertyName
    - username
    type: object
  response.Pagination:
    properties:
      dataPerPage:
        type: integer
      list:
        items:
          type: object
        type: array
      page:
        type: integer
      totalData:
        type: integer
      totalPage:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        type: object
      success:
        type: boolean
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Ping
      tags:
      - Ping
  /item:
    post:
      consumes:
      - application/json
      parameters:
      - description: Item Name
        in: formData
        name: itemName
        required: true
        type: string
      - description: Item Description
        in: formData
        name: itemDescription
        required: true
        type: string
      - description: Active
        in: formData
        name: isActive
        required: true
        type: boolean
      - description: Photo
        in: formData
        name: photo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                payload:
                  $ref: '#/definitions/controller.itemRes'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create Item
      tags:
      - Item
  /item/{item_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: item_id
        in: path
        name: kanji
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete Item
      tags:
      - Item
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: item_id
        in: path
        name: kanji
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                payload:
                  $ref: '#/definitions/controller.itemRes'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Item
      tags:
      - Item
    put:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: item_id
        in: path
        name: kanji
        required: true
        type: number
      - description: Item Name
        in: formData
        name: itemName
        required: true
        type: string
      - description: Item Description
        in: formData
        name: itemDescription
        required: true
        type: string
      - description: Active
        in: formData
        name: isActive
        required: true
        type: boolean
      - description: Photo
        in: formData
        name: photo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                payload:
                  $ref: '#/definitions/controller.itemRes'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update Item
      tags:
      - Item
  /item/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: payload
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/controller.pageItemReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                payload:
                  $ref: '#/definitions/response.Pagination'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Page Item
      tags:
      - Item
  /itemvariant:
    post:
      consumes:
      - application/json
      parameters:
      - description: Itemvariant Name
        in: formData
        name: itemvariantName
        required: true
        type: string
      - description: Itemvariant Description
        in: formData
        name: itemvariantDescription
        required: true
        type: string
      - description: Price
        in: formData
        name: price
        required: true
        type: integer
      - description: Active
        in: formData
        name: isActive
        required: true
        type: boolean
      - description: Photo
        in: formData
        name: photo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                payload:
                  $ref: '#/definitions/controller.itemvariantRes'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create Itemvariant
      tags:
      - Itemvariant
  /itemvariant/{itemvariant_id}:
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: itemvariant_id
        in: path
        name: kanji
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                payload:
                  $ref: '#/definitions/controller.itemvariantRes'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Itemvariant
      tags:
      - Itemvariant
  /itemvariant/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: payload
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/controller.pageItemvariantReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                payload:
                  $ref: '#/definitions/response.Pagination'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Page Itemvariant
      tags:
      - Itemvariant
  /sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/controller.signinReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Sign in a user
      tags:
      - Authentication
  /sign-out:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Sign out a user
      tags:
      - Authentication
  /sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/controller.signupReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Sign up a user
      tags:
      - Authentication
  /user/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: To do get current active user
      tags:
      - User
swagger: "2.0"
